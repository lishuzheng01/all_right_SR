Metadata-Version: 2.1
Name: all_right_SR
Version: 0.1.0
Summary: Python implementation of Sure Independence Screening and Sparsifying Operator (SISSO)
Home-page: https://github.com/your-username/sisso-py
Author: lishuzheng
Author-email: SISSO-Py Team <3035326878@qq.com>
License: Apache License
        Version 2.0, January 2004
        http://www.apache.org/licenses/
        
        TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
        1. Definitions.
        
           "License" shall mean the terms and conditions for use, reproduction,
           and distribution as defined by Sections 1 through 9 of this document.
        
           "Licensor" shall mean the copyright owner or entity granting the License.
        
           "Legal Entity" shall mean the union of the acting entity and all
           other entities that control, are controlled by, or are under common
           control with that entity. For the purposes of this definition,
           "control" means (i) the power, direct or indirect, to cause the
           direction or management of such entity, whether by contract or
           otherwise, or (ii) ownership of fifty percent (50%) or more of the
           outstanding shares, or (iii) beneficial ownership of such entity.
        
           "You" (or "Your") shall mean an individual or Legal Entity
           exercising permissions granted by this License.
        
           "Source" form shall mean the preferred form for making modifications,
           including but not limited to software source code, documentation
           source, and configuration files.
        
           "Object" form shall mean any form resulting from mechanical
           transformation or translation of a Source form, including but
           not limited to compiled object code, generated documentation,
           and conversions to other media types.
        
           "Work" shall mean the work of authorship, whether in Source or
           Object form, made available under the License, as indicated by a
           copyright notice that is included in or attached to the work
           (which shall not include communication that is conspicuously
           marked or otherwise designated in writing by the copyright owner
           as "Not a Work").
        
           "Derivative Works" shall mean any work, whether in Source or Object
           form, that is based upon (or derived from) the Work and for which the
           editorial revisions, annotations, elaborations, or other modifications
           represent, as a whole, an original work of authorship. For the purposes
           of this License, Derivative Works shall not include works that remain
           separable from, or merely link (or bind by name) to the interfaces of,
           the Work and derivative works thereof.
        
           "Contribution" shall mean any work of authorship, including
           the original version of the Work and any modifications or additions
           to that Work or Derivative Works thereof, that is intentionally
           submitted to Licensor for inclusion in the Work by the copyright owner
           or by an individual or Legal Entity authorized to submit on behalf of
           the copyright owner. For the purposes of this definition, "submitted"
           means any form of electronic, verbal, or written communication sent
           to the Licensor or its representatives, including but not limited to
           communication on electronic mailing lists, source code control
           systems, and issue tracking systems that are managed by, or on behalf
           of, the Licensor for the purpose of discussing and improving the Work,
           but excluding communication that is conspicuously marked or otherwise
           designated in writing by the copyright owner as "Not a Contribution."
        
           "Contributor" shall mean Licensor and any individual or Legal Entity
           on behalf of whom a Contribution has been received by Licensor and
           subsequently incorporated within the Work.
        
        2. Grant of Copyright License. Subject to the terms and conditions of
           this License, each Contributor hereby grants to You a perpetual,
           worldwide, non-exclusive, no-charge, royalty-free, irrevocable
           copyright license to use, reproduce, modify, distribute, and prepare
           Derivative Works of, and publicly display, publicly perform,
           sublicense, and distribute the Work and such Derivative Works in
           Source or Object form.
        
        Copyright 2024 SISSO-Py Team
        
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        
            http://www.apache.org/licenses/LICENSE-2.0
        
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
        
Project-URL: Homepage, https://github.com/your-username/sisso-py
Project-URL: Repository, https://github.com/your-username/sisso-py.git
Project-URL: Issues, https://github.com/your-username/sisso-py/issues
Keywords: symbolic regression,feature selection,SISSO,machine learning,physics
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.19.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: scikit-learn>=1.0.0
Requires-Dist: pandas>=1.3.0
Requires-Dist: tqdm>=4.60.0
Provides-Extra: full
Requires-Dist: sympy>=1.9.0; extra == "full"
Requires-Dist: joblib>=1.1.0; extra == "full"
Requires-Dist: numba>=0.56.0; extra == "full"
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov>=2.10; extra == "dev"
Requires-Dist: black>=21.0; extra == "dev"
Requires-Dist: flake8>=3.8; extra == "dev"
Requires-Dist: isort>=5.0; extra == "dev"
Requires-Dist: mypy>=0.800; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=4.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=1.0; extra == "docs"
Requires-Dist: nbsphinx>=0.8; extra == "docs"

# AllRight-SR: 多策略符号回归工具箱

## 项目说明
AllRight-SR 集成了进化、稀疏建模、贝叶斯、神经符号以及多种混合优化方法，
帮助用户从数据中自动发现具有物理意义的解析表达式。
所有模型在训练后均可通过统一的 `model.explain()` 接口获取评估指标和人类可读的拟合公式。

## 安装
```bash
pip install -r requirements.txt
# 或从源代码安装
pip install -e .
```

## 快速开始
以 SISSO 基础模型为例：
```python
import numpy as np
from sisso_py.sparse_regression.sisso import SISSORegressor

X = np.linspace(-2*np.pi, 2*np.pi, 100).reshape(-1, 1)
y = np.sin(X).ravel()

model = SISSORegressor(K=2)
model.fit(X, y)
print(model.explain())
```
典型的报告内容如下所示：
```
y = 0.99*sin(x)
R^2: 0.98
MSE: 0.01
RMSE: 0.10
MAE: 0.08
```

## 算法示例
以下示例默认已准备好训练数据 `X` 与目标 `y`。
每个模型训练完成后均可调用 `model.explain()` 输出包含 R²、MSE 等指标的整洁报告。

### 进化算法
```python
from sisso_py.evolutionary.gp import GeneticProgramming
model = GeneticProgramming(population_size=50, n_generations=10)
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.evolutionary.ga_pso import GAPSORegressor
model = GAPSORegressor(generations=30)
model.fit(X, y)
print(model.explain())
```

### 稀疏建模
```python
from sisso_py.sparse_regression.sisso import SISSORegressor
model = SISSORegressor(K=2)
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.sparse_regression.lasso_ridge_omp import LassoRegressor, RidgeRegressor, OMPRegressor
model = LassoRegressor()
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.sparse_regression.sindy import SINDyRegressor
model = SINDyRegressor()
model.fit(X, y)
print(model.explain())
```

### 贝叶斯与概率方法
```python
from sisso_py.probabilistic.bsr import BayesianSymbolicRegressor
model = BayesianSymbolicRegressor()
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.probabilistic.ppi import ProbabilisticProgramInduction
model = ProbabilisticProgramInduction()
model.fit(X, y)
print(model.explain())
```

### 神经符号
```python
from sisso_py.neural_symbolic.deep_sr import DeepSymbolicRegression
model = DeepSymbolicRegression()
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.neural_symbolic.hybrid_neural import NeuralSymbolicHybrid
model = NeuralSymbolicHybrid()
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.neural_symbolic.rl_sr import ReinforcementSymbolicRegression
model = ReinforcementSymbolicRegression()
model.fit(X, y)
print(model.explain())
```

### 混合优化
```python
from sisso_py.hybrid.evolutionary_gradient import EvolutionaryGradientHybrid
model = EvolutionaryGradientHybrid()
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.hybrid.multi_objective import MultiObjectiveSymbolicRegression
model = MultiObjectiveSymbolicRegression()
model.fit(X, y)
print(model.explain())
```
```python
from sisso_py.hybrid.physics_informed import PhysicsInformedSymbolicRegression
model = PhysicsInformedSymbolicRegression()
model.fit(X, y)
print(model.explain())
```

## 贡献
欢迎提交 Issue 或 Pull Request 来改进项目。

## 许可证
本项目遵循 Apache 许可证，详情参见 [LICENSE](LICENSE)。

## 联系
如有问题或建议，请在 GitHub Issues 中反馈或联系 3035326878@qq.com。

---
**AllRight-SR**：让符号回归和公式发现更加简单。
